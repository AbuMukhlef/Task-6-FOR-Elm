openapi: 3.0.1
info:
  title: Employee Management System
  description: APIs for managing employee records in the Employee Management System V5
  version: 1.0.0
servers:
  - url: http://localhost:8080/api/v6/employees
paths:
  /api/v6/employees:
    get:
      summary: Retrieve all employees
      description: Fetch all employees from the database
      operationId: getAllEmployees
      responses:
        '200':
          description: A list of employees
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
        '400':
          description: Bad request
    post:
      summary: Add new employee
      description: Create a new employee record
      operationId: createEmployee
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
      responses:
        '201':
          description: Employee created successfully
        '400':
          description: Bad request
  /api/v6/employees/{id}:
    get:
      summary: Get employee by ID
      description: Fetch an employee using their unique ID
      operationId: getEmployeeById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Employee details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
        '404':
          description: Employee not found
    put:
      summary: Update an existing employee
      description: Modify employee details
      operationId: updateEmployee
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
      responses:
        '200':
          description: Employee updated successfully
        '404':
          description: Employee not found
    delete:
      summary: Delete an employee
      description: Remove an employee by ID
      operationId: deleteEmployee
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Employee deleted successfully
        '404':
          description: Employee not found
components:
  schemas:
    Employee:
      type: object
      required:
        - id
        - name
        - gender
        - dob
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Abdullah
        gender:
          type: string
          example: Male
        dob:
          type: string
          format: date
          example: 1989-11-16
        phoneNumber:
          type: string
          nullable: true
          example: "0544948800"
        hobbies:
          type: array
          items:
            type: string
          nullable: true
          example: ["Programming", "Football"]
